---
import Layout from '../layouts/Layout.astro';
import Header from '../components/lock-code-challenge/Header.astro';
import Clue from '../components/lock-code-challenge/Clue.astro';
import Display from '../components/lock-code-challenge/Display.astro';
import Pad from '../components/lock-code-challenge/Pad.astro';
import Footer from '../components/lock-code-challenge/Footer.astro';
import Dialog from '../components/Dialog.astro';

const length = 3;
---

<Layout
  description="Lock Code Challenge Website #LockCodeChallenge"
  title="Lock Code Challenge"
>
  <main class="h-full w-full" data-length={length}>
    <Header title="Lock Code Challenge" />

		<section class="container mx-auto">
      <Clue length={length} />

      <div class="bg-zinc-800 border-gray-500 border flex flex-col items-center justify-center m-auto p-4 relative rounded-md shadow-black shadow-2xl text-gray-500 w-80 z-50">
        <Display length={length} />
        <Pad />
      </div>

      <Footer />
		</section>

    <Dialog id="modal-help">
      <p class="font-bold mb-3 text-xl w-full">How to play</p>
      <p class="mb-2">Guess the {length}-digit code by seeing only a small part.</p>
      <p class="mb-2">Use the pad or the keyboard to input numbers.</p>
      <p class="mb-2">Press <b>R</b> to reset the game.</p>
      <p class="mb-2">Press <b>H</b> for instructions.</p>
    </Dialog>
	</main>
</Layout>

<style></style>

<script>
  const length = parseInt(document.querySelector('main')!.dataset.length!) || 3;
  const body = document.querySelector('body');
  const streak = document.getElementById('streak');
  const highscore = document.getElementById('highscore');
  const clueHider = document.getElementById('clue-hider');
  const displayNumbers = document.querySelectorAll('.display-number');
  const numberClues = document.querySelectorAll('.clue-number');
  const padNumbers = document.querySelectorAll('.pad-number');
  const helpButton = document.getElementById('btn-help');
  const restartButton = document.getElementById('btn-restart');
  const helpModal = document.getElementById('modal-help');

  let win = false;
  let ended = false;
  let displayNumberList = Array(length);
  let lockNumberList = Array(length);

  padNumbers.forEach((numberButton) => numberButton.addEventListener('click', () => doDisplayNumber(numberButton.innerHTML)));
  document.addEventListener('keydown', keyboard);
  helpButton!.addEventListener('click', help);
  restartButton!.addEventListener('click', restart);

  function keyboard(event: any) {
    if (event.ctrlKey) {
      return;
    }

    switch (event.key) {
      case '1': case '2':
      case '3': case '4':
      case '5': case '6':
      case '7': case '8':
      case '9': case '0':
        const number = parseInt(event.key);
        triggerHover(number);
        doDisplayNumber(number.toString());
        break;
      case 'i': case 'I':
      case 'h': case 'H':
        help();
        break;
      case 'r': case 'R':
      case 's': case 'S':
      case ' ':
        restart();
        break;
    }
  }

  function triggerHover(number: number) {
    let index = (0 === number) ? 9 : number - 1;
    let padNumber = padNumbers[index];
    padNumber.classList.add('hover');

    setTimeout(() => padNumber.classList.remove('hover'), 300);
  }

  function doDisplayNumber(number: string) {
    if (ended) {
      return;
    }

    let index = displayNumberList.findIndex((item: any) => undefined === item);
    if (-1 === index) {
      return;
    }

    displayNumberList[index] = number;

    let displayNumber = document.querySelector(`#display-number-${index + 1}`);
    displayNumber!.innerHTML = number;
    displayNumber!.classList.add('filled');

    if (length === (index + 1)) {
      check();
    }
  }

  function check() {
    ended = true;

    clueHider!.classList.add('show');

    const displayNumber = displayNumberList.join('');
    const lockNumber = lockNumberList.join('');

    if (displayNumber !== lockNumber) {
      body!.classList.add('wrong');
      displayNumbers.forEach((displayNumber) => displayNumber.classList.add('wrong'));

      updateStreakValue(0);

      return;
    }

    win = true;
    body!.classList.add('correct');
    displayNumbers.forEach((displayNumber) => displayNumber.classList.add('correct'));

    let streakValue = parseInt(window.localStorage.getItem('streak')!);
    updateStreakValue(streakValue + 1);
  }

  function help() {
    helpModal!.showModal();
  }

  function restart() {
    let streakValue = parseInt(window.localStorage.getItem('streak')!);

    if (0 < streakValue && !win && !confirm('Are you sure? You will lose your current streak')) {
      return;
    }

    if (!win) {
      streakValue = 0;
    }

    updateStreakValue(streakValue);
    start();
  }

  function start() {
    win = false;
    ended = false;
    displayNumberList = Array(length);
    lockNumberList = Array(length);

    streak!.innerHTML = window.localStorage.getItem('streak') || '0';
    highscore!.innerHTML = window.localStorage.getItem('highscore') || '0';

    body!.classList.remove('correct');
    body!.classList.remove('wrong');
    clueHider!.classList.remove('show');

    displayNumbers.forEach((displayNumber) => {
      displayNumber.innerHTML = '';
      displayNumber.classList.remove('filled');
      displayNumber.classList.remove('correct');
      displayNumber.classList.remove('wrong');
    });
    numberClues.forEach((item) => item.innerHTML = '');

    let interval = setInterval(randomNumber, 50);
    setTimeout(() => clearInterval(interval), 1000);
  }

  function randomNumber() {
    for (let index = 0; index < length; index++) {
      const number = Math.floor(Math.random() * 10);

      lockNumberList[index] = number;
      document.querySelector(`#clue-number-${index + 1}`)!.innerHTML = number.toString();
    }
  }

  function updateStreakValue(streakValue: number) {
    let highscoreValue = parseInt(window.localStorage.getItem('highscore')!) || 0;
    highscoreValue = Math.max(streakValue, highscoreValue);

    window.localStorage.setItem('streak', streakValue.toString());
    window.localStorage.setItem('highscore', highscoreValue.toString());

    streak!.innerHTML = streakValue.toString();
    highscore!.innerHTML = highscoreValue.toString();
  }

  help();
  start();
</script>
